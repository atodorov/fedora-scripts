#!/usr/bin/env python

################################################################################
#
#   Copyright (c) 2014, Alexander Todorov <atodorov@redhat.com>
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#
################################################################################
#
# When given a list of packages (full paths) and bug statistics produces a sorted
# list of package name/version/# of bugs
#
################################################################################

import os
import rpm
import sys

def get_rpm_info(rpm_file):
    """Returns rpm information by querying a rpm"""
    ts = rpm.ts()
    fdno = os.open(rpm_file, os.O_RDONLY)
    try:
        hdr = ts.hdrFromFdno(fdno)
    except rpm.error:
        fdno = os.open(rpm_file, os.O_RDONLY)
        ts.setVSFlags(rpm._RPMVSF_NOSIGNATURES)
        hdr = ts.hdrFromFdno(fdno)
    os.close(fdno)
    return { 
                'name': hdr[rpm.RPMTAG_NAME],
                'version' : "%s-%s" % (hdr[rpm.RPMTAG_VERSION], hdr[rpm.RPMTAG_RELEASE]),
                'epoch': hdr[rpm.RPMTAG_EPOCH],
                'arch': hdr[rpm.RPMTAG_ARCH],
            }
if len(sys.argv) < 3:
    print "USAGE: %s package-list bug-stats" % __file__
    sys.exit(1)


packages = open(sys.argv[1]).readlines()
bug_stats = {}
for line in open(sys.argv[2]).readlines():
    name, bug_count = line.split(",")
    bug_stats[name] = bug_count
components = bug_stats.keys()

results = { 0 : [] }
for package in packages:
    if not package.strip():
        continue

    rpm_info = get_rpm_info(package)
    name = rpm_info['name']
    version = rpm_info['version']

    if name in components:
        bug_count = bug_stats[name]
        if bug_count not in results.keys():
            results[bug_count] = []
        results[bug_count].append("%s-%s" % (name, version))
    else:
        results[0].append("%s-%s" % (name, version))

bug_numbers = results.keys()
bug_numbers.sort(reverse=True)


for num in bug_numbers:
    components = results[num]
    components.sort()

    for c in components:
        print c, num
